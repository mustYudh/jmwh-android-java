apply plugin: 'com.android.application'



enum ApiEnvEnum {
    DEV(0, "假面舞会-测试"), ONLINE(1, "假面舞会"), PRE_RELEASE(2, "假面舞会-预发")

    private final int value
    private final String name

    ApiEnvEnum(int value, String name) {
        this.value = value
        this.name = name
    }

    int getValue() {
        value
    }

    String getName() {
        name
    }
}

android {
    def envStr = project.hasProperty('API_MODE') ? API_MODE : "DEV"
    def appNameStr = (envStr as ApiEnvEnum).name

    compileSdkVersion rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.applicationId
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        flavorDimensions "versionCode"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        buildConfigField("int", "API_MODE", "${(envStr as ApiEnvEnum).value}")
        manifestPlaceholders = [PACKAGE_NAME : rootProject.ext.applicationId,
                                APP_NAME     : appNameStr,
                                UMENG_APPKEY : rootProject.ext.uMengKey,
                                UMENG_CHANNEL: rootProject.ext.uMengChannel,
                                YX_KEY       : rootProject.ext.nimKey]

        ndk {
            abiFilters "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }



    signingConfigs {
        debug {
            storeFile file('../keystores/jmwh.jks')
            storePassword 'asdfghjkl'
            keyAlias 'jmwh'
            keyPassword 'asdfghjkl'
            v2SigningEnabled true
        }
        release {
            storeFile file('../keystores/jmwh.jks')
            storePassword 'asdfghjkl'
            keyAlias 'jmwh'
            keyPassword 'asdfghjkl'
            v2SigningEnabled true
        }
    }


    splits {
        abi {
            reset()
            universalApk false
            include "armeabi-v7a", "x86", "arm64-v8a", "x86_64"
        }
    }

    productFlavors {
        jmwh {
            applicationId rootProject.ext.applicationId
            manifestPlaceholders = [PACKAGE_NAME : rootProject.ext.applicationId,
                                    APP_NAME     : appNameStr,
                                    UMENG_APPKEY : rootProject.ext.uMengKey,
                                    UMENG_CHANNEL: rootProject.ext.uMengChannel,
                                    YX_KEY       : rootProject.ext.nimKey]
        }
    }


    buildTypes {

        def defaultProguardRule = 'proguard-rules.pro'
        def proguardBaseRule = '../proguard-rule/proguard-rules-base.pro'
        def proguardReacNativeRule = '../proguard-rule/proguard-rules-react-native-0.46.0.pro'
        def proguardRemoveLogRule = '../proguard-rule/proguard-rules-remove-logs.pro'
        def proguardThirdPartServiceRule = '../proguard-rule/proguard-rules-third-part-service.pro'
        def proguardUmengSharedRule = '../proguard-rule/proguard-rules-umeng-startShare.pro'

        debug {
            debuggable true
            shrinkResources false
            minifyEnabled false
            signingConfig signingConfigs.release
        }

        release {
            productFlavors.jmwh.signingConfig signingConfigs.release
            debuggable false
            minifyEnabled true
            zipAlignEnabled true

            proguardFiles getDefaultProguardFile("proguard-android.txt"), defaultProguardRule,
                    proguardBaseRule, proguardReacNativeRule,
                    proguardRemoveLogRule,
                    proguardThirdPartServiceRule,
                    proguardUmengSharedRule
        }
    }


    applicationVariants.all { variant ->

        variant.outputs.all { output ->
            def outputFileAbsolutePath = output.outputFileName
            def isRelease = outputFileAbsolutePath.indexOf("release")
            outputFileName = isRelease >= 0 ? "app-release.apk" : "app-debug.apk"
        }

        variant.outputs.all { output ->
            def versionCodes = ["armeabi-v7a": 1,"x86": 2,"x86_64": 3,"arm64-v8a": 4]
            def abi = output.getFilter(com.android.build.OutputFile.ABI)
            if (abi != null) {
                output.versionCodeOverride = versionCodes.get(abi) * 1048576 + defaultConfig.versionCode
            }
        }
    }

    dexOptions {
        preDexLibraries false
    }

    lintOptions {
        disable "MissingTranslation"

        abortOnError false
    }

    compileOptions {
        encoding 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

}



repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'src/libs')
    implementation project(path: ':common')
    implementation project(path: ':http-lib')
    implementation project(path: ':bottom_tab')
    implementation project(':crop_img')
    implementation project(':share')
    //noinspection GradleCompatible
    implementation "com.android.support:appcompat-v7:${V7_APPCOMPAT_VERSION}"
    implementation "com.android.support.constraint:constraint-layout:${CONSTRAIT_SUPPORT_VERSION}"
    implementation "com.android.support:design:${DESIGIN_SUPPORT_VERSION}"
    implementation "com.android.support:recyclerview-v7:${V7_APPCOMPAT_VERSION}"
    //test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.aliyun.dpa:oss-android-sdk:2.4.5'
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.30'
    implementation 'ch.ielse:switchbutton:1.0.1'

}
