apply plugin: 'com.android.library'

android {
    compileSdkVersion 28



    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.android.support:appcompat-v7:28.0.0"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    api "com.android.support:recyclerview-v7:28.0.0"
    api 'com.github.bumptech.glide:glide:4.2.0'
    api 'com.android.support:multidex:1.0.3'
    api 'jp.wasabeef:glide-transformations:2.0.1'

}




def SDK_BASENAME = "myjar";
def SDK_VERSION = "_v1.0.0";
def sdkDestinationPath = "build/outputs/jar/";
def zipFile = file('build/intermediates/packaged-classes/release/classes.jar')
task deleteBuild(type: Delete) {
    delete sdkDestinationPath + SDK_BASENAME + SDK_VERSION + ".jar"
}
task makeJar(type: Jar) {
    from zipTree(zipFile)
    from fileTree(dir: 'src/main', includes: ['assets/**']) // 打包assets目录下的所有文件

    baseName = SDK_BASENAME + SDK_VERSION
    destinationDir = file(sdkDestinationPath)
}
//configuration 'proguard-rules.pro'
makeJar.dependsOn(deleteBuild, build)



task proguard(type: proguard.gradle.ProGuardTask) {
    // 未混淆的jar路径
    injars 'build/build/outputs/jar/myjar_v1.00.jar'
    // 混淆后的jar输出路径
    outjars 'build/build/outputs/jar/myjar_v1.01.jar'
    // 混淆协议
    configuration 'proguard-rules.pro'
}
